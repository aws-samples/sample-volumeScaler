apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.daemonset.name }}
  namespace: {{ .Values.daemonset.namespace }}
  labels:
    app: volumescaler
    {{- if .Values.daemonset.labels }}
    {{- toYaml .Values.daemonset.labels | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      app: volumescaler
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: volumescaler
    spec:
      serviceAccountName: {{ .Values.rbac.serviceAccountName }}
      containers:
      - name: volumescaler
        image: {{ printf "%s:%s" .Values.image.repository .Chart.AppVersion | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: NODE_NAME_ENV
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          {{- if .Values.pvcResizerEnv }}
          {{- toYaml .Values.pvcResizerEnv | nindent 10 }}
          {{- end }}
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: true
        resources:
          {{- toYaml .Values.resources | nindent 8 }}
        volumeMounts:
        - name: kubelet
          mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
      volumes:
      - name: kubelet
        hostPath:
          path: {{ .Values.kubeletHostPath }}
          type: Directory
      dnsPolicy: ClusterFirst
      nodeSelector:
        {{- toYaml .Values.daemonset.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.daemonset.tolerations | nindent 8 }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      priorityClassName: {{ .Values.daemonset.priorityClassName }}
